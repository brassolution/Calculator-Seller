import React, { useState } from "react";

export default function PriceCalculator() { const [hargaAsal, setHargaAsal] = useState(178.5); const [komisenPercent, setKomisenPercent] = useState(9.27); const [diskaunPercent, setDiskaunPercent] = useState(0); const [targetBersih, setTargetBersih] = useState(50);

const toNumber = (v) => { const n = parseFloat(String(v).replace(/[^0-9.-]+/g, "")); return Number.isFinite(n) ? n : 0; };

const cHargaAsal = toNumber(hargaAsal); const cKomisen = toNumber(komisenPercent) / 100; const cDiskaun = toNumber(diskaunPercent) / 100; const cTarget = toNumber(targetBersih);

const komisenAmount = cHargaAsal * cKomisen; const diskaunAmount = cHargaAsal * cDiskaun; const hargaSelepasDiskaun = Math.max(0, cHargaAsal - diskaunAmount); const jumlahDiperoleh = hargaSelepasDiskaun * (1 - cKomisen);

// required discount percent to reach target after commission // (1 - d) = Target / (HargaAsal * (1 - c)) => d = 1 - Target/(HargaAsal*(1-c)) let requiredDiscountPercent = null; if (cHargaAsal > 0 && (1 - cKomisen) > 0) { const d = 1 - cTarget / (cHargaAsal * (1 - cKomisen)); requiredDiscountPercent = d; }

const fmt = (n) => Number.isFinite(n) ? n.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) : "0.00";

return ( <div className="max-w-3xl mx-auto p-6 bg-white rounded-2xl shadow-lg"> <h1 className="text-2xl font-semibold mb-4">Kalkulator Harga Jual (Shopee / TikTok)</h1>

<div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
    <label className="block">
      <div className="text-sm text-slate-600">Harga Asal (RM)</div>
      <input type="number" step="0.01" value={hargaAsal} onChange={e => setHargaAsal(e.target.value)} className="mt-1 w-full border rounded px-3 py-2" />
    </label>

    <label className="block">
      <div className="text-sm text-slate-600">Komisen (%)</div>
      <input type="number" step="0.01" value={komisenPercent} onChange={e => setKomisenPercent(e.target.value)} className="mt-1 w-full border rounded px-3 py-2" />
    </label>

    <label className="block">
      <div className="text-sm text-slate-600">Diskaun Promo (%)</div>
      <input type="number" step="0.01" value={diskaunPercent} onChange={e => setDiskaunPercent(e.target.value)} className="mt-1 w-full border rounded px-3 py-2" />
    </label>

    <label className="block">
      <div className="text-sm text-slate-600">Target Bersih (RM) â€” (pilihan)</div>
      <input type="number" step="0.01" value={targetBersih} onChange={e => setTargetBersih(e.target.value)} className="mt-1 w-full border rounded px-3 py-2" />
    </label>
  </div>

  <div className="overflow-x-auto">
    <table className="w-full table-auto border-collapse">
      <thead>
        <tr className="bg-slate-50">
          <th className="text-left p-3">Kolum</th>
          <th className="text-left p-3">Nilai</th>
        </tr>
      </thead>
      <tbody>
        <tr className="border-t">
          <td className="p-3">Harga Asal (RM)</td>
          <td className="p-3">RM {fmt(cHargaAsal)}</td>
        </tr>

        <tr className="border-t">
          <td className="p-3">Komisyen dibayar ({(cKomisen * 100).toFixed(2)}%)</td>
          <td className="p-3">RM {fmt(komisenAmount)}</td>
        </tr>

        <tr className="border-t">
          <td className="p-3">Diskaun promo ({(cDiskaun * 100).toFixed(2)}%)</td>
          <td className="p-3">RM {fmt(diskaunAmount)}</td>
        </tr>

        <tr className="border-t">
          <td className="p-3">Harga selepas diskaun (RM)</td>
          <td className="p-3">RM {fmt(hargaSelepasDiskaun)}</td>
        </tr>

        <tr className="border-t bg-slate-50 font-semibold">
          <td className="p-3">Jumlah diperoleh selepas komisen (RM)</td>
          <td className="p-3">RM {fmt(jumlahDiperoleh)}</td>
        </tr>

        <tr className="border-t">
          <td className="p-3">Diskaun perlu untuk capai target RM {fmt(cTarget)}</td>
          <td className="p-3">
            {requiredDiscountPercent === null ? "-" : (
              requiredDiscountPercent <= 0 ? (
                <span>Tidak perlu diskaun (sudah capai target)</span>
              ) : requiredDiscountPercent >= 1 ? (
                <span>Perlu >100% (tidak mungkin)</span>
              ) : (
                <span>{(requiredDiscountPercent * 100).toFixed(2)}%</span>
              )
            )}
          </td>
        </tr>

        <tr className="border-t">
          <td className="p-3">Harga selepas diskaun yang diperlukan (RM)</td>
          <td className="p-3">
            {requiredDiscountPercent === null || requiredDiscountPercent >= 1 ? "-" : (
              `RM ${fmt(Math.max(0, cHargaAsal * (1 - requiredDiscountPercent)))}`
            )}
          </td>
        </tr>

      </tbody>
    </table>
  </div>

  <p className="mt-4 text-sm text-slate-600">Cara guna: masukkan <strong>Harga Asal</strong>, laraskan <strong>Komisen</strong> dan <strong>Diskaun</strong> untuk lihat jumlah diperoleh. Isi <strong>Target Bersih</strong> untuk kira berapa peratus diskaun perlu dibuat.</p>
</div>

); }

